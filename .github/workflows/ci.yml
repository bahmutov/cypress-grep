name: ci
on: [push, pull_request]
jobs:
  install:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

  tests1:
    runs-on: ubuntu-20.04
    needs: install
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      # we re-install the dependencies
      # in practice, this should pull the cached
      # dependencies from the previous install job
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      - name: Run unit tests ðŸ§ª
        run: npm test

      - name: Run e2e tests ðŸ§ª
        run: |
          npx cypress-expect \
            --min-passing 5 --pending 0

      - name: Run e2e skip tests without grep ðŸ§ª
        run: |
          npx cypress-expect \
            --passing 1 --pending 2 \
            --spec cypress/integration/skip-spec.js \
            --config testFiles="skip-spec.js"

      # all tests are pending
      # because the grep tag is only used in "it.skip" tests
      - name: Run e2e skip tests with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/skip-spec.js \
            --config testFiles="skip-spec.js" \
            --env grep=pending \
            --expect expects/pending.json

      # grep tests using Cypress module API
      - name: Grep tests using Cypress module API ðŸ§©
        run: node ./expects/test-npm-module.js

      # tests do not break the custom test config object as argument
      - name: Run e2e tests with config object with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/config-spec.js \
            --config testFiles="config-spec.js" \
            --env grep=@config \
            --expect expects/config-spec.json

      # there should be 1 test with "hello" substring
      # and 3 other tests that will be pending
      - name: Run tests with "hello" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=hello \
            --expect ./expects/hello.json

      - name: Run tests without "hello" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=-hello \
            --expect-exactly ./expects/no-hello.json

      - name: Run tests without "hello" or "works 2" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="-hello; -works 2" \
            --expect-exactly ./expects/no-hello-no-works2.json

      - name: Run tests with "works" or "hello" but without "2" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="works; hello; -2" \
            --expect-exactly ./expects/works-hello-no-2.json

      # check space character
      - name: Run tests with "works 2" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="works 2" \
            --expect ./expects/works-2.json

      # trims the grep string
      - name: Run tests with "works 2" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="  works 2    " \
            --expect ./expects/works-2.json

      - name: Run tests with "hello" or "works 2" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="hello; works 2" \
            --expect ./expects/hello-or-works-2.json

      # https://github.com/cypress-io/cypress-grep/issues/96
      - name: Run tests with "hello" or "works 2" with spec filtering ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep="hello; works 2",grepFilterSpecs=true \
            --expect ./expects/hello-or-works-2.json

  tests2:
    runs-on: ubuntu-20.04
    needs: install
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      # we re-install the dependencies
      # in practice, this should pull the cached
      # dependencies from the previous install job
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      - name: Run tests with "@tag1" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=@tag1 \
            --expect ./expects/tag1.json

      - name: Run tests with number 1 ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=1 \
            --expect ./expects/number1.json

      - name: Run tests with "@tag2" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=@tag2 \
            --expect ./expects/tag2.json

      - name: Run tests with "does-not-exist-tag" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=does-not-exist-tag \
            --expect ./expects/all-pending.json

      - name: Run tests with "@tag1 AND @tag2" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grepTags=@tag1+@tag2 \
            --expect ./expects/tag1-and-tag2.json

      - name: Run tests without @tag1 ðŸ§ª
        run: |
          npx cypress-expect \
            --env grepTags=-@tag1 \
            --expect ./expects/invert-tag1.json

      - name: Run tests with @tag1 but without @tag2 ðŸ§ª
        run: |
          npx cypress-expect \
            --env grepTags=@tag1+-@tag2 \
            --expect ./expects/tag1-without-tag2.json

      - name: Run tests with title and tag ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=works,grepTags=@tag1 \
            --expect ./expects/works-and-tag1.json

      # you can pass test tags in the config object
      - name: Run e2e tests with tags in the config ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/config-tags-spec.js \
            --config testFiles="config-tags-spec.js" \
            --env grepTags=config \
            --expect expects/config-tags-spec.json

      # skip tests by using the describe tags
      - name: Run e2e tests with tags on the describe invert ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/describe-tags-spec.js \
            --config testFiles="describe-tags-spec.js" \
            --env grepTags=-@smoke \
            --expect expects/describe-tags-invert-spec.json

      # enable suite of tests using a tag
      - name: Enable suite of tests with a tag ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/describe-tags-spec.js \
            --config testFiles="describe-tags-spec.js" \
            --env grepTags=@smoke \
            --expect expects/describe-tags-spec.json

      # several specs with tags using OR condition
      # https://github.com/cypress-io/cypress-grep/issues/92
      - name: Tags OR specs ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="tags/*.spec.js" \
            --env grepTags="high smoke" \
            --expect-exactly expects/tags-or.json

      - name: Tags OR specs using commas ðŸ§ª
        env:
          # Cypress CLI has problems parsing --env values with commas
          # so pass the value using an environment variable
          CYPRESS_grepTags: 'high,smoke'
        run: |
          npx cypress-expect \
            --config testFiles="tags/*.spec.js" \
            --expect-exactly expects/tags-or.json

      - name: Tags AND specs ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="tags/*.spec.js" \
            --env grepTags="high+smoke" \
            --expect-exactly expects/tags-and.json

      # https://github.com/cypress-io/cypress-grep/issues/98
      - name: Tags OR specs with grepFilterSpecs=true ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="tags/*.spec.js" \
            --env grepTags="high regression",grepFilterSpecs=true \
            --expect-exactly expects/tags-or-filter.json

      - name: Specify is an alias to it ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/specify-spec.js \
            --config testFiles="specify-spec.js" \
            --env grep="works 2" \
            --expect-exactly expects/specify.json

      # instead of making filtered tests pending
      # with it.skip, completely omit them
      - name: Omit filtered tests ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/spec.js \
            --env grep="works 2",grepOmitFiltered=true \
            --expect-exactly expects/omit-filtered.json

      - name: Omit filtered tests by tag ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/spec.js \
            --env grepTags="@tag1",grepOmitFiltered=true \
            --expect-exactly expects/omit-filtered.json

      # https://github.com/cypress-io/cypress-grep/issues/88
      - name: Omit and skip combination ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="omit-and-skip-spec.js" \
            --env grepTags="@us1",grepOmitFiltered=true \
            --expect-exactly expects/omit-and-skip.json

  tests3:
    runs-on: ubuntu-20.04
    needs: install
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      # we re-install the dependencies
      # in practice, this should pull the cached
      # dependencies from the previous install job
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      - name: Nested describes with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/nested-describe-spec.js \
            --config testFiles="nested-describe-spec.js" \
            --env grepTags=@smoke \
            --expect expects/nested-describe-spec.json

      - name: Nested describes inheriting tags with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/nested-describe-spec.js \
            --config testFiles="nested-describe-spec.js" \
            --env grepTags="@smoke+@fast" \
            --expect expects/nested-describe-inheriting-tags-spec.json

      - name: Nested describes inheriting grep name ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/nested-describe-spec.js \
            --config testFiles="nested-describe-spec.js" \
            --env grep="bottom runs too" \
            --expect expects/nested-describe-inheriting-names-spec.json

      - name: Nested describes without grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/nested-describe-spec.js \
            --config testFiles="nested-describe-spec.js" \
            --env grepTags=@does-not-exist \
            --pending 2

      # repeat the selected test 3 times
      - name: Burn grepped test ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep="hello w",burn=3 \
            --expect expects/hello-burn.json

      # prevent multiple plugin registrations
      # https://github.com/cypress-io/cypress-grep/issues/59
      - name: Multiple registrations test ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/multiple-registrations.js \
            --config testFiles="multiple-registrations.js" \
            --env grep="hello world",burn=3 \
            --expect expects/multiple-registrations.json

      - name: cypress-each test ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/each-spec.js \
            --config testFiles="each-spec.js" \
            --env grep="for 2" \
            --expect expects/each-spec.json

      - name: burning without grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/burn-spec.js \
            --config testFiles="burn-spec.js" \
            --env burn=5 \
            --expect expects/burn-spec.json

      - name: preserves the test context ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/this-spec.js \
            --config testFiles="this-spec.js" \
            --env burn=3 \
            --expect expects/this-spec.json

      - name: filter the specs first ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/*.js" \
            --env grep="outside any suites",grepFilterSpecs=true \
            --expect-exactly expects/grep-filter-specs.json

      - name: filter the specs first by tag ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/*.js" \
            --env grepTags=@smoke,grepFilterSpecs=true \
            --expect-exactly expects/grep-filter-specs-tag.json

      - name: run untagged tests ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/spec.js" \
            --env grepUntagged=true \
            --expect-exactly expects/grep-untagged.json

      - name: run untagged tests in blocks ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/describe-tags-spec.js" \
            --env grepUntagged=true \
            --expect-exactly expects/describe-tags-spec-untagged.json

      - name: filter TypeScript spec ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/ts-spec.ts" \
            --env grep=loads,grepOmitFiltered=true,grepFilterSpecs=true \
            --expect-exactly expects/ts-spec.json

      - name: run before and beforeEach fn when the first test is filtered ðŸ§ª
        run: |
          npx cypress-expect \
            --env grepTags=@staging \
            --spec cypress/integration/before-spec.js \
            --config testFiles="before-spec.js" \
            --expect ./expects/before.json

      - name: inherits parent tags ðŸ§ª
        run: |
          npx cypress-expect \
            --config testFiles="**/inherits-tag-spec.js" \
            --env grepTags="@sanity+@screen-b" \
            --expect-exactly expects/inherits-tag-spec.json

      - name : explicit not tags prevent test from running
        run: |
          npx cypress-expect \
            --config testFiles="**/explicit-spec.js" \
            --env grepTags="@tag1 --@tag2" \
            --expect-exactly expects/explicit-spec.json

      - name : explicit not tags work with omitFiltered
        run: |
          npx cypress-expect \
            --config testFiles="**/explicit-spec.js" \
            --env grepTags="@tag1 --@tag2",grepOmitFiltered=true \
            --expect-exactly expects/explicit-omit-spec.json

  release:
    needs: [tests1, tests2, tests3]
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false
      - name: Semantic Release ðŸš€
        uses: cycjimmy/semantic-release-action@v2
        with:
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
